{
    "version": "https://jsonfeed.org/version/1",
    "title": "Saiodgmの小窝",
    "subtitle": "那些消失在岁月长河里的人和事，还有一些一些的美丽，都化着点滴斑斓，飞散在这个季节深处。",
    "icon": "http://blog.saiodgm.gq/images/favicon.ico",
    "description": "",
    "home_page_url": "http://blog.saiodgm.gq",
    "items": [
        {
            "id": "http://blog.saiodgm.gq/course/extensions/how-to-use-Gooreplacer/",
            "url": "http://blog.saiodgm.gq/course/extensions/how-to-use-Gooreplacer/",
            "title": "Gooreplacer の 妙用",
            "date_published": "2022-05-29T02:27:29.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>话说  <code>cdn.jsdelivr.net</code>  早在 2021.12.20 就在国内死掉了，当时各种解决办法的文章层出不穷，我也就不细说了。但是这依然解决不了我们日常使用的问题，毕竟作为 Web 维运者，我们虽然可以把自己的网站的 CDN 换了，但是还有很多网站（特别是国外的网站）还是用的 JSD，导致我们要正常访问只能挂梯子，体验感及其不佳。</p>\n<p>另外，对于 Web 维运者来说，虽然我们可以换其它 CDN，但是据我所知其它的 CDN 只支持 NPM 的加速，所以对于  <code>/gh/</code>  和  <code>/combine/</code>  之类的链接我们只能本地化，BUT，对于白嫖党来说，本地那个速度真的是一言难尽，<span class=\"spoiler\" title=\"你知道得太多了\">甚至比 JSD 还要慢</span>。</p>\n<p>后来  <code>fastly.jsdelivr.net</code>  在国内可以正常访问了，成为了  <code>cdn.jsdelivr.net</code>  在国内的替代，<span class=\"spoiler\" title=\"你知道得太多了\">虽然速度很着急</span>，但总比没有强嘛。</p>\n<p>那我们该如何充分利用这个国内替代品呢？</p>\n<p>本文将介绍使用浏览器扩展 Gooreplacer 的重定向功能，使我们网上冲浪的体验感更好。</p>\n<hr />\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<h2 id=\"对于上得去浏览器扩展市场的童鞋\"><a class=\"anchor\" href=\"#对于上得去浏览器扩展市场的童鞋\">#</a> 对于上得去浏览器扩展市场的童鞋</h2>\n<p>直接在浏览器扩展市场搜索  <code>Gooreplacer</code>  安装即可。</p>\n<h2 id=\"对于上不去浏览器扩展市场的童鞋\"><a class=\"anchor\" href=\"#对于上不去浏览器扩展市场的童鞋\">#</a> 对于上不去浏览器扩展市场的童鞋</h2>\n<h3 id=\"方案一\"><a class=\"anchor\" href=\"#方案一\">#</a> 方案一</h3>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ppYWNhaTIwNTAvZ29vcmVwbGFjZXI=\">这里</span>是 Gooreplacer 的源代码地址，进入  <code>Releases</code> ，找到最新版本的 <strong> <code>chrome_gooreplacer_xxxxxxxxxx.zip</code> </strong> 或者是 <strong> <code>firefox_gooreplacer_xxxxxxxxxx.zip</code> </strong> 点击下载。<ins class=\"dot\">注意不是 Source Code！</ins></li>\n</ol>\n<details class=\"primary\"><summary>下载速度太慢的解决办法</summary><div>\n<p>PS：如果 GitHub 速度太慢了，可以右键复制链接，然后把链接里的  <code>github.com</code>  换成  <code>hub.fastgit.xyz</code>  再回车。</p>\n</div></details>\n<ol start=\"2\">\n<li>把下载下来的压缩包解压。</li>\n<li>打开浏览器的扩展页面，打开开发者模式，选择  <code>加载解压缩的扩展</code> （各个浏览器可能会有差别，不过应该都差不多吧），选择刚才解压下来的文件夹即可。</li>\n</ol>\n<h3 id=\"方案二\"><a class=\"anchor\" href=\"#方案二\">#</a> 方案二</h3>\n<p>国内其实有一些提供浏览器插件的网站，比如说<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hyb21lNjY2LmNvbS8=\">这个</span>。您可以直接搜索下载想要的浏览器插件。</p>\n<ol>\n<li>搜索  <code>Gooreplacer</code>  并下载  <code>crx</code>  文件。</li>\n<li>这个时候（如果是 Chrome 的话）会提示您 “无法从此网站添加扩展”。这时直接在本地找到这个被下载下来的文件，然后把后缀名从  <code>crx</code>  改成  <code>zip</code> ，得到压缩包。</li>\n<li>同方案一的 2、3。</li>\n</ol>\n<hr />\n<h1 id=\"开始使用\"><a class=\"anchor\" href=\"#开始使用\">#</a> 开始使用</h1>\n<p>折腾了半天，终于把插件下下来了，果然天朝的网络状况就是那样。让我们仔细端详端详这个插件：</p>\n<details class=\"info\"><summary>废话文学就可以不看了 qwq</summary><div>\n<ol>\n<li><code>Goo</code>  说明了两点，<s>一是指作者很咕咕咕（其实并没有）</s>，二是可以让我们想到 Google，也体现了作者开发这个扩展的最初目的就是为了帮助国内的同学们访问 Google 的资源。</li>\n<li><code>replace</code>  的意思是代替，在一个词之后加上  <code>-er</code>  说明这是一个人，那么就可以看出这个扩展的原理：用一个资源代替另一个。</li>\n</ol>\n</div></details>\n<p>好的，现在就让我们点击右上角的橙色小刷子，进入这个插件的设置页面。如果您发现这个页面的显示有点奇怪也不要害怕，这只是因为 JSD 上的 CSS 挂了，功能不受影响。</p>\n<p>点击  <code>重定向</code> ，然后点  <code>新增</code> ，在匹配模式里填上  <code>cdn.jsdelivr.net</code> ，匹配类型选择  <code>通配符</code> ，目标地址写  <code>fastly.jsdelivr.net</code> ，是否开启处打勾，最后点确定。</p>\n<p>这个重定向的规则就是把  <code>cdn.jsdelivr.net/...</code>  重定向到  <code>fastly.jsdelivr.net/...</code> ，以此让国内的同学们也可以快乐地网上冲浪。</p>\n<p>现在，页面显示不正常的同学们在刷新一下，是不是好了？</p>\n<hr />\n<p>当然除了重定向 JSD 之外，您也可以用这个重定向功能进行一些其它的操作。</p>\n<p>比如笔者的好朋友 <span class=\"exturl\" data-url=\"aHR0cHM6Ly94c2MwNjIuZ2l0ZWUuaW8=\">XSC062</span> 就曾经写过一篇教程 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Bhc3RlL2pxM25scHd1\">《我应该如何注册 SPOJ？》</span>，这一篇教程实际上也是利用 Gooreplacer 的重定向功能使得我们可以使用 Recaptcha。</p>\n<p>插件原作者也在 GitHub 的 README 里面给出了他写的 json，是把一些 Google 的资源重定向到了国内的镜像，以此来访问一些本来访问不了的东西。</p>\n<hr />\n<h1 id=\"后记\"><a class=\"anchor\" href=\"#后记\">#</a> 后记</h1>\n<p>除了重定向之外 Gooreplacer 还有另外一些功能，但是笔者不常用所以就没介绍了。大家可以自己去探索。</p>\n<p>有什么问题可以评论区问我，正常情况下我会在一天之内回复的。</p>\n",
            "tags": [
                "杂谈教程",
                "Edge",
                "浏览器扩展推荐"
            ]
        },
        {
            "id": "http://blog.saiodgm.gq/course/about-website/how-to-make-a-static-page/",
            "url": "http://blog.saiodgm.gq/course/about-website/how-to-make-a-static-page/",
            "title": "使用 GitHub 制作一个静态页面",
            "date_published": "2022-04-13T14:31:23.000Z",
            "content_html": "<h1 id=\"什么是静态页面\"><a class=\"anchor\" href=\"#什么是静态页面\">#</a> 什么是静态页面？</h1>\n<p>如果一个页面没有服务器的话，那这就是一个静态页面。这个页面的源代码是事先写好的，只能由作者手动改变，不能根据访客的活动改变。这一篇文章，我们将通过把网站源代码托管在 GitHub 的方式制作一个属于自己的静态页面。</p>\n<p>博主的系统：Win10。不同系统教程可能会有出入，请留意。</p>\n<hr />\n<h1 id=\"step-1-把源代码存在-github-上\"><a class=\"anchor\" href=\"#step-1-把源代码存在-github-上\">#</a> Step 1. 把源代码存在 GitHub 上</h1>\n<h2 id=\"前置工作\"><a class=\"anchor\" href=\"#前置工作\">#</a> 前置工作</h2>\n<p>请根据自己的电脑配置下载最新版的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=\">Git</span>。</p>\n<p>下载的时候一路默认就可以了。</p>\n<h2 id=\"注册-github-账号\"><a class=\"anchor\" href=\"#注册-github-账号\">#</a> 注册 GitHub 账号</h2>\n<p>如果您已经有了可以直接跳过。</p>\n<ol>\n<li>进入 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLw==\">GitHub</span>，点击右上角的  <code>Sign up</code> 。</li>\n</ol>\n<p><img data-src=\"https://unpkg.com/saiodgm-files@latest/how-to-make-a-static-page-1-01-01.jpeg\" alt=\"\" /></p>\n<div class=\"note warning\">\n<p>GitHub 的主机在美国，能不能登上去要看运气。如果访问不了的话请稍等一会儿再试。</p>\n</div>\n<ol start=\"2\">\n<li>此时进入了注册页面，按照它的提示一步一步来即可。</li>\n</ol>\n<p><img data-src=\"https://unpkg.com/saiodgm-files@latest/how-to-make-a-static-page-1-01-02.jpeg\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>注册的邮箱最好用国外服务商的，QQ 也行，且注册完毕后需要等一会儿才能生效。</p>\n</div>\n<ol start=\"3\">\n<li>填写完信息之后，你需要从邮箱接一个验证码输进去。</li>\n<li>接下来进入了一个页面，您可以直接划到最底下点击  <code>Skip personalization</code>  跳过，也可以设置。</li>\n</ol>\n<hr />\n<h2 id=\"新建仓库\"><a class=\"anchor\" href=\"#新建仓库\">#</a> 新建仓库</h2>\n<ol>\n<li>登录进来之后，点击右上角您的头像，然后点击列表中的  <code>Your repositories</code> 。</li>\n</ol>\n<p><img data-src=\"https://unpkg.com/saiodgm-files@latest/how-to-make-a-static-page-1-01-03.jpeg\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>点击右上角的  <code>New</code> ，填写仓库信息：</li>\n</ol>\n<p><img data-src=\"https://unpkg.com/saiodgm-files@latest/how-to-make-a-static-page-1-01-04.jpeg\" alt=\"\" /></p>\n<div class=\"note primary\">\n<p>关于仓库名：<br />\n有教程说必须以  <code>[username].github.io</code>  为仓库名，其实不一定，只是说，如果您以  <code>[username].github.io</code>  为仓库名，那么您访问页面的链接将是  <code>https://[username].github.io</code> ；如果不是，那将是  <code>https://[username].github.io/您取的仓库名/</code> 。</p>\n</div>\n<ol start=\"3\">\n<li>\n<p>在您的电脑里找一个合适的位置存放静态页面的文件，<strong>并保证此文件夹内没有其他多余文件</strong>，比如  <code>D:\\Website\\HTML\\course\\</code> ，<strong>此后的教程后会使用  <code>[Pageroot]</code>  代替这个地址。</strong></p>\n</li>\n<li>\n<p>关于  <code>[Pageroot]</code>  文件夹的配置。</p>\n</li>\n</ol>\n<p>口胡了一张很不专业的图方便大家理解：</p>\n<pre><code>[Pageroot]\n├──index.html ----- (1)\n└──post\n    ├──index.html ----- (2)\n    ├──img1.jpg\n    ├──img2.jpg\n    └──qwq\n    |   └──index.html ----- (3)\n    └──qaq\n        ├──css1.css\n        ├──css2.css\n        └──qvq\n            └──index.html ----- (4)\n</code></pre>\n<p>假如您的仓库名是  <code>[username].github.io</code> ，那么  <code>https://[username].github.io</code>  显示的内容就是  <code>index.html(1)</code> ，而  <code>https://[username].github.io/post/</code>  显示的内容就是  <code>index.html(2)</code> 。 <code>https://[username].github.io/qaq/</code>  是不存在的，因为这个文件夹里面没有  <code>index.html</code> ，但是  <code>https://[username].github.io/qaq/qvq/</code>  是存在的。</p>\n<p>当然，您可以在任意一个  <code>index.html</code>  里使用相对地址引用其它文件，比如  <code>/post/img1.jpg</code>  或者是  <code>/qaq/css1.css</code> 。</p>\n<ol start=\"5\">\n<li>初始化 Git。</li>\n</ol>\n<p>随便找个地方右键，点击  <code>Git Bash Here</code> ，依次输入如下指令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"您的 GitHub 用户名\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"您注册 GitHub 的邮箱\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ssh-keygen -t rsa -C <span class=\"token punctuation\">[</span>您注册 GitHub 的邮箱<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">less</span> ~/.ssh/id_rsa.pub</pre></td></tr></table></figure><p>然后终端就会冒出来一串奇妙的乱码，记得把它复制下来。</p>\n<p>进入 GitHub，点击右上角头像，在下面出来的菜单中找到  <code>Settings</code> ，点进去找到  <code>SSH and GPG keys</code> ，再点击  <code>New SSH key</code> ， <code>Title</code>  随便取一个，然后把刚才复制的那一堆东西复制到  <code>Key</code>  里面，最后点击下面的  <code>Add SSH key</code>  即可。</p>\n<p>（这一步不知道为什么没有图 qwq）</p>\n<p>接着继续在 Git Bash 里面运行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> -T git@github.com</pre></td></tr></table></figure><p>如果得到的输出是：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>The authenticity of <span class=\"token function\">host</span> <span class=\"token string\">'github.com (207.97.227.239)'</span> can't be established.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>RSA key fingerprint is <span class=\"token number\">16</span>:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Are you sure you want to <span class=\"token builtin class-name\">continue</span> connecting <span class=\"token punctuation\">(</span>yes/no<span class=\"token punctuation\">)</span>?</pre></td></tr></table></figure><p>那就说明您配置成功了。</p>\n",
            "tags": [
                "杂谈教程",
                "网站搭建",
                "GitHub",
                "Website"
            ]
        },
        {
            "id": "http://blog.saiodgm.gq/junior-high-school/phycisc/Circuit-diagram/",
            "url": "http://blog.saiodgm.gq/junior-high-school/phycisc/Circuit-diagram/",
            "title": "电路图",
            "date_published": "2022-04-05T05:46:24.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>这是这个系列的第一篇文章，所以笔者有一些要瞎 bb 的东西，不看也罢。</p>\n<details class=\"primary\"><summary>点击展开 qwq</summary><div>\n<p>（2022.04.05）</p>\n<p>u1s1，笔者的物理虽然还看得过去，但是从机械开始就感觉有点问题了，到了电学就基本上来不起了 QAQ，再鉴于我们的物理老师 ZYX 讲得还不错，所以我会把他的一些思考，讲的一些不太好记在笔记本上的东西写在这里。</p>\n<p><s>其实这也是 ZYX 布置的作业之一啦，只是我懒得在笔记本上写那么多字，所以笔记本上只有知识框架，详细的思考和理解方式就记在这个上面了。</s></p>\n<p>至于行文风格，因为笔者是一位在役 OIer，所以风格会比较偏向于 OI 的那种博客。这种风格的弊端比较明显，就是框架没那么清晰，比较类似于那种科普文章。所以，还是不要放下手中的笔记本呀！</p>\n<p>废话不多说，LET'S START!</p>\n</div></details>\n<hr />\n<h2 id=\"摩擦起电\"><a class=\"anchor\" href=\"#摩擦起电\">#</a> 摩擦起电</h2>\n<p>首先作为一位之前从来没上接触过电学的人<s>才怪嘞，初一已经拉完一遍了，初二再拉一遍可还行</s>，我们先要来了解一下电到底是什么玩意儿。</p>\n<p>首先各位同学都知道，物质是由分子和原子组成的，分子又是由原子组成的。原子的结构类似于太阳系，中间围着的是原子核，在它周围运动的是核外电子。而我们都知道，原子核里的质子带正电，中子不带电，所以原子核带正电；核外电子带负电。一个<strong>正常的</strong>原子中这俩东西的值一样大，抵消了，所以原子不显电性。</p>\n<p>而我们又知道，原子核像太阳系里的太阳一样，把电子束缚在自己周围运动（ZYX：核外电子的运动不是绕核运动，而是没有规律的，这个仅作为了解），所以就存在一个问题：有些原子核对自己的电子束缚能力太弱了，所以只要外界给一点条件，就会离开先前的原子核逃跑。</p>\n<p>两个物体摩擦的时候，会生热，一生热，电子的运动就比之前更剧烈，某些原子核束缚不住旁边的电子了，于是电子纷纷逃离之前的宿主，变成了自由电荷。但是它们要跑到哪里呢？如果此时它们旁边有对电子束缚能力更强的原子核，它们就会找到新的宿主，围着它运动。这样一来，电子逃跑的那个原子负电荷少了，显出了正电；多束缚电子的原子负电荷多了，显出了负电。</p>\n<p>这样一来，我们就找到了摩擦起电的条件：<strong>必须是两个不同的物质在摩擦。</strong> 如果是同种物质，那原子核对电子的束缚能力是一样的，也就不存在什么电荷转移了。另外还有就是：</p>\n<p><ins class=\"dot\"><strong>注意，因为是电子在逃跑，所以摩擦起电是负电荷在转移，正电荷不能动，切记！</strong></ins>（单独成段以表示郑重）</p>\n",
            "tags": [
                "初中综合课程",
                "Phycisc",
                "物理电学"
            ]
        },
        {
            "id": "http://blog.saiodgm.gq/hello-world/",
            "url": "http://blog.saiodgm.gq/hello-world/",
            "title": "Hello World",
            "date_published": "2022-04-01T14:42:12.176Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}